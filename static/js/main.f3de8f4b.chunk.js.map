{"version":3,"sources":["shared/Container.tsx","FormManager/LoginPage/LoginPage.tsx","FormManager/SignUpPage/SignUpPage.tsx","FormManager/FormManager.tsx","AppBar/AppBar.tsx","GlobalCSS.tsx","EmailConfirmation/EmailConfirmation.tsx","MainGame/Checker/Checker.tsx","MainGame/Square/Square.tsx","MainGame/MainGame.tsx","App.tsx","index.tsx"],"names":["Container","props","page","css","container","Paper","children","LoginPage","switchForms","setIsLoading","setUser","useForm","register","handleSubmit","errors","enqueueSnackbar","useSnackbar","useState","isLoginLoading","setIsLoginLoading","showPassword","setShowPassword","header","textFieldsContainer","formInputs","Typography","variant","Chip","label","onClick","clickable","onSubmit","data","axios","defaults","withCredentials","post","then","res","verifyUser","catch","error","response","status","TextField","usernameOrEmail","name","placeholder","inputRef","required","InputProps","startAdornment","InputAdornment","position","AccountCircle","type","password","endAdornment","IconButton","aria-label","onMouseDown","e","preventDefault","VpnKey","Button","color","disabled","CircularProgress","formPages","SignUpPage","recaptchaRef","useRef","watch","Date","selectedDate","setSelectedDate","setFormDate","isRecaptchaValid","setIsRecaptchaValid","anchorEl","setAnchorEl","inputMessage","setInputMessage","isSignupLoading","setIsSignupLoading","isUsernameExist","setIsUsernameExist","isEmailExist","setIsEmailExist","showConfirmPassword","setShowConfirmPassword","formInputsContainer","errorMessage","checkIfExist","username","setTo","restName","get","toLowerCase","onInputFocus","message","currentTarget","onInputBlur","Fragment","Popper","open","Boolean","placement","modifiers","flip","enabled","preventOverflow","boundariesElement","transition","TransitionProps","Fade","timeout","confirmPassword","usernamePassword","dataToLowerCase","_","mapValues","method","put","id","in","firstname","pattern","value","onFocus","onBlur","lastname","console","log","validate","utils","DateFnsUtils","format","margin","inputVariant","onChange","date","setHours","InputAdornmentProps","dateOfBirth","email","ref","sitekey","token","FormManager","login","selectedFormPage","setSelectedFormPage","useCallback","signup","updatePage","useEffect","anchorOrigin","vertical","horizontal","autoHideDuration","AppBar","appBar","iconButton","Toolbar","GlobalCSS","fontFamily","bodyStyling","globalStyling","styles","EmailConfirmation","user","isResendEmailLoading","setIsResendEmailLoading","didntRecieveContainer","resendButton","Checker","checkerColor","isChecked","isKing","checker","kingColor","Square","isChecker","onSquareClick","squareColor","shouldHighlight","isDisabled","squareColorStyle","sqaureStyle","isChckerStyle","gameInit","Array","from","length","v","rowIndex","columnIndex","undefined","evenRow","square","row","column","MainGame","getNumberOfPlayers","counter","i","j","game","moveChecker","currentGame","current","target","printBoard","col","produce","draft","Math","abs","eatedRow","eatedCol","forEach","currentChecker","socket","isGameStarted","setIsGameStarted","isGameFinished","setIsGameFinished","isWon","setIsWon","turn","setTurn","setGame","isAlreadyClicked","setIsAlreadyClicked","currentClicked","setCurrentClicked","availableSteps","setAvailableSteps","coords","push","getAvailableSteps","checkIfClicked","off","on","rowStyle","isStepTaken","playerColor","newGame","map","removeHighlight","filter","x","emit","checkStepsAvailable","next","nextNext","isNextStepTaken","isNextNextStepTaken","nextPlayerColor","isSucceed","stepsAvailable","previousRight","previousPreviousRight","updatedBoard","previousLeft","previousPreviousLeft","updatedBoardLatest","nextLeft","nextNextLeft","nextRight","nextNextRight","key","printSymbol","white","black","default","board","printRow","whyDidYouRender","theme","createMuiTheme","palette","primary","main","secondary","setSocket","socketIOClient","query","JSON","stringify","App","isLoading","useCookies","removeCookie","ThemeProvider","isEmailConfirmed","Object","entries","detail","index","toLocaleDateString","toString","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.f3de8f4b.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst Container: React.FC = (props) => {\r\n    \r\n    const page = css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: 1em 0;\r\n    `;\r\n    \r\n    const container = css`\r\n        padding: 1em;\r\n        width: 70%;\r\n        min-width: 19em;\r\n        max-width: 50em;\r\n    `;\r\n  return (\r\n      <div css={page}>\r\n          <Paper css={container}>\r\n              {props.children}\r\n          </Paper>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport React, { useState } from 'react';\r\nimport { Typography, TextField, Button, Chip, CircularProgress, InputAdornment, IconButton } from '@material-ui/core';\r\nimport { VisibilityOffRounded as VisibilityOff ,VisibilityRounded as Visibility, AccountCircle, VpnKey } from '@material-ui/icons/';\r\nimport useForm from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\nimport { verifyUser } from '../../App';\r\nimport { Container }  from '../../shared';\r\nimport { IDatabaseUser } from '../../types/types';\r\n\r\ninterface IProps {\r\n  switchForms: () => void;\r\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUser: React.Dispatch<React.SetStateAction<IDatabaseUser | null>>;\r\n}\r\n\r\ninterface ILogin {\r\n  usernameOrEmail: string;\r\n  password: string;\r\n}\r\n\r\nconst LoginPage: React.FC<IProps> = (props) => {\r\n\r\n  const { switchForms, setIsLoading, setUser } = props;\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [ isLoginLoading, setIsLoginLoading ] = useState(false);\r\n  const [ showPassword, setShowPassword ] = useState(false);\r\n\r\n  const header = css`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 0.2em;\r\n  `;\r\n\r\n  const textFieldsContainer = css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0.1em;\r\n  `;\r\n\r\n  const formInputs = css`\r\n    margin-top: 0.6em;\r\n  `;\r\n\r\n  const onSubmit = (data: ILogin) => {\r\n    setIsLoginLoading(true);\r\n    axios.defaults.withCredentials = true;\r\n    axios.post('http://localhost:8080/user/login/', data)\r\n    .then((res) => {\r\n      enqueueSnackbar('User logged in succesfuly', {variant: 'success'});\r\n      setIsLoginLoading(false);\r\n      verifyUser(setUser, setIsLoading);\r\n    }).catch((error) => {\r\n      setIsLoginLoading(false);\r\n      if (!error.response) return;\r\n      if (error.response.status === 400) {\r\n        enqueueSnackbar(\"Wrong password\", {variant: 'error'})\r\n      }\r\n      if(error.response.status === 404) {\r\n        enqueueSnackbar(\"Username or Email not found\", {variant: 'error'})\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Typography css={header} variant=\"h4\">Login</Typography>\r\n        <Chip label=\"Are you new? Sign Up!\" onClick={switchForms} clickable variant=\"outlined\" />\r\n      </div>\r\n      <form css={textFieldsContainer} onSubmit={handleSubmit(onSubmit as any)}>\r\n        {/* USERNAME */}\r\n        <TextField css={formInputs}\r\n          variant=\"outlined\"\r\n          label=\"Username/Email *\"\r\n          error={errors.usernameOrEmail ? true : false}\r\n          name=\"usernameOrEmail\"\r\n          placeholder=\"JhonnyDoe_1\"\r\n          inputRef={register({\r\n            required: true,\r\n            // pattern: { value: /^[a-zA-Z0-9_.-]{3,15}$|[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/, message: '* Username is not valid' }\r\n          })}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        {/* PASSWORD */}\r\n        <TextField css={formInputs}\r\n          type={showPassword ? 'text' : 'password'}\r\n          variant=\"outlined\"\r\n          label=\"Password *\"\r\n          error={errors.password ? true : false}\r\n          name=\"password\"\r\n          placeholder=\"Monkey1212\"\r\n          inputRef={register({\r\n            required: true,\r\n            // pattern: {\r\n            //   value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n            //   message: '* Password is not valid'\r\n            // }\r\n          })}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  onMouseDown={(e) => e.preventDefault()}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <VpnKey />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <Button css={formInputs} type=\"submit\" variant=\"outlined\" color=\"primary\" disabled={isLoginLoading} >{isLoginLoading ? <CircularProgress /> : 'Enter'}</Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport React, { useState, useRef } from 'react';\r\nimport { Paper, Typography, TextField, Button, Fade, Chip, Popper, CircularProgress, InputAdornment, IconButton } from '@material-ui/core';\r\nimport { VisibilityOffRounded as VisibilityOff ,VisibilityRounded as Visibility } from '@material-ui/icons/';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, MaterialUiPickersDate } from '@material-ui/pickers';\r\nimport useForm from 'react-hook-form';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\nimport _ from 'lodash';\r\nimport { Container } from '../../shared';\r\nimport { IFormUser } from '../../types/types';\r\n\r\ninterface IProps {\r\n  switchForms: () => void;\r\n}\r\n\r\nconst SignUpPage: React.FC<IProps> = (props) => {\r\n  \r\n  const { switchForms } = props;\r\n  const recaptchaRef = useRef(null);\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  \r\n  const [ selectedDate, setSelectedDate ] = useState<MaterialUiPickersDate>(new Date());\r\n  const [ formData, setFormDate ] = useState<IFormUser | null>();\r\n  const [ isRecaptchaValid, setIsRecaptchaValid ] = useState(false);\r\n  const [ anchorEl, setAnchorEl ] = useState<HTMLInputElement | HTMLTextAreaElement | null>(null);\r\n  const [ inputMessage, setInputMessage ] = useState<String | null>(null);\r\n  const [ isSignupLoading, setIsSignupLoading ] = useState(false);\r\n  const [ isUsernameExist, setIsUsernameExist ] = useState(false);\r\n  const [ isEmailExist, setIsEmailExist ] = useState(false);\r\n  const [ showPassword, setShowPassword ] = useState(false);\r\n  const [ showConfirmPassword, setShowConfirmPassword ] = useState(false);\r\n\r\n  const header = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 0.2em;\r\n`;\r\n\r\n  const textFieldsContainer = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.1em;\r\n`;\r\n\r\nconst formInputsContainer = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst formInputs = css`\r\n  margin-top: 0.6em;\r\n  width: 100%;\r\n`;\r\n\r\nconst errorMessage = css`\r\n  color: #f77e75;\r\n  margin-top: 1em;\r\n  margin-left: 1em;\r\n  position: absolute;\r\n  right: 1em;\r\n`;\r\n\r\n  const dateChanged = (date: MaterialUiPickersDate) => {\r\n    if(date) {\r\n      const today = new Date();\r\n      if(today.setHours(0,0,0,0) > date.setHours(0,0,0,0)) {\r\n        setSelectedDate(date);\r\n      }\r\n      else {\r\n        enqueueSnackbar('Are you a time traveler?', {variant: 'info', })\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: IFormUser) => {\r\n    if(isRecaptchaValid) {\r\n      setIsSignupLoading(true);\r\n      delete data.confirmPassword\r\n      const usernamePassword = data.password;\r\n      delete data.password;\r\n      const dataToLowerCase: IFormUser = _.mapValues(data, _.method('toLowerCase'));\r\n      dataToLowerCase.password = usernamePassword;\r\n      setFormDate(dataToLowerCase);\r\n      axios.put('http://localhost:8080/user/', dataToLowerCase)\r\n      .then((res) => {\r\n        enqueueSnackbar(res.data, {variant: 'info'})\r\n        setIsSignupLoading(false);\r\n        switchForms();\r\n      }).catch((error) => {\r\n        setIsSignupLoading(false);\r\n      })\r\n    }\r\n    else {\r\n      enqueueSnackbar(\"Please validate you're not a robot\", {variant: 'error'})\r\n    }\r\n  };\r\n\r\n  const checkIfExist = (username: string, setTo: (value: React.SetStateAction<boolean>) => void, restName: string) => {\r\n    if(!username) return false;\r\n    return axios.get('http://localhost:8080/user/' + restName + '/'+username.toLowerCase()).then((res) => {\r\n      setTo(true)\r\n      return false;\r\n    }).catch((e) => {\r\n      setTo(false)\r\n      return true;\r\n    })\r\n  }\r\n\r\n  const recaptchaChanged = (token: string | null) => {\r\n    if(token) {\r\n      setIsRecaptchaValid(true);\r\n    }\r\n  }\r\n\r\n  const onInputFocus = (message: String) => (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setInputMessage(message);\r\n    setAnchorEl(e.currentTarget);\r\n  }\r\n\r\n  const onInputBlur = () => {\r\n    setAnchorEl(null);\r\n    setInputMessage(null);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Popper\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      placement=\"top-start\"\r\n      modifiers={{\r\n        flip: {\r\n          enabled: true,\r\n        },\r\n        preventOverflow: {\r\n          enabled: true,\r\n          boundariesElement: 'undefined',\r\n        },\r\n      }}\r\n      transition\r\n      css={css`padding: 1em 0; z-index: 1; max-width: 18em;`}\r\n    >\r\n      {({ TransitionProps }) => (\r\n            <Fade {...TransitionProps} timeout={350}>\r\n                <Paper>\r\n                  <Typography css={css`padding: 1em;`} variant=\"body1\">{inputMessage}</Typography>\r\n                </Paper>\r\n            </Fade>\r\n        )}\r\n    </Popper>\r\n    <Container>\r\n      <div>\r\n        <Typography css={header} variant=\"h4\">Sign Up</Typography>\r\n        <Chip label=\"Already have a user? Log In\" onClick={switchForms} clickable variant=\"outlined\" />\r\n      </div>\r\n      <form css={textFieldsContainer} onSubmit={handleSubmit(onSubmit as any)} id=\"signup-form\">\r\n        {/* FIRST NAME */}\r\n        <div css={formInputsContainer}>\r\n          <Fade in={errors.firstname && errors.firstname.message ? true : false} timeout={500}>\r\n            <React.Fragment>\r\n              <Typography css={errorMessage} variant=\"subtitle2\">{errors.firstname && errors.firstname.message}</Typography>\r\n            </React.Fragment>\r\n          </Fade>\r\n          <TextField css={formInputs}\r\n            variant=\"outlined\"\r\n            label=\"First Name *\"\r\n            error={errors.firstname ? true : false}\r\n            name=\"firstname\"\r\n            placeholder=\"John\"\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: { value: /^[a-zA-Z](\\s?[a-zA-Z]){2,29}$/, message: '* First Name is not valid'}\r\n            })}\r\n            onFocus={onInputFocus('First Name minimum length is 3 letters up to 30 and can only contain the letters A-Z')} \r\n            onBlur={onInputBlur}\r\n          />\r\n        </div>\r\n        {/* LAST NAME */}\r\n        <div css={formInputsContainer}>\r\n          <Fade in={errors.lastname && errors.lastname.message ? true : false} timeout={500}>\r\n            <Typography css={errorMessage} variant=\"subtitle2\">{errors.lastname && errors.lastname.message}</Typography>\r\n          </Fade>\r\n          <TextField css={formInputs}\r\n            variant=\"outlined\"\r\n            label=\"Last Name *\"\r\n            error={errors.lastname ? true : false}\r\n            name=\"lastname\"\r\n            placeholder=\"Doe\"\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: { value: /^[a-zA-Z](\\s?[a-zA-Z']){2,29}$/, message: '* Last Name is not valid'}\r\n            })}\r\n            onFocus={onInputFocus('Last Name minimum length is 3 letters up to 30 and can only contain the letters A-Z')} \r\n            onBlur={onInputBlur}\r\n          />\r\n        </div>\r\n        {/* USERNAME */}\r\n        <div css={formInputsContainer}>\r\n          <Fade in={(errors.username && (errors.username.message || isUsernameExist)) ? true : false} timeout={500}>\r\n            <Typography css={errorMessage} variant=\"subtitle2\">{errors.username && errors.username.message ? errors.username.message : isUsernameExist && '* Username already taken'}</Typography>\r\n          </Fade>\r\n          {console.log(errors.username)}\r\n          <TextField css={formInputs}\r\n            variant=\"outlined\"\r\n            label=\"Username *\"\r\n            error={errors.username ? true : false}\r\n            name=\"username\"\r\n            placeholder=\"JhonnyDoe_1\"\r\n            inputRef={register({\r\n              required: true,\r\n              validate: {\r\n                value: (value) => checkIfExist(value, setIsUsernameExist, 'checkIfUsernameExist')\r\n              },\r\n              pattern: { value: /^[a-zA-Z0-9_.-]{3,15}$/, message: '* Username is not valid'},\r\n            })}\r\n            onFocus={onInputFocus('Username minimum is 3 letters up to 15 and can only contain the letters A-Z, Numbers 0-9 and  (\"_\", \".\", \"-\"))')} \r\n            onBlur={onInputBlur}\r\n          />\r\n        </div>\r\n        {/* DATE OF BIRTH */}\r\n        <div css={formInputsContainer}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              css={formInputs}\r\n              format=\"MM/dd/yyyy\"\r\n              margin=\"none\"\r\n              inputVariant=\"outlined\"\r\n              onChange={dateChanged}\r\n              InputAdornmentProps={{ position: \"start\" }}\r\n              value={selectedDate}\r\n              label=\"Date Of Birth *\"\r\n              error={errors.dateOfBirth ? true : false}\r\n              name=\"dateOfBirth\"\r\n              inputRef={register({ required: true })}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        {/* EMAIL */}\r\n        <div css={formInputsContainer}>\r\n          <Fade in={errors.email && (errors.email.message || isEmailExist) ? true : false} timeout={500}>\r\n            <Typography css={errorMessage} variant=\"subtitle2\">{errors.email && errors.email.message ? errors.email.message : isEmailExist && '* Email already exist'}</Typography>\r\n          </Fade>\r\n          <TextField css={formInputs}\r\n            variant=\"outlined\"\r\n            label=\"Email *\"\r\n            error={errors.email ? true : false}\r\n            name=\"email\"\r\n            placeholder=\"example@gmail.com\"\r\n            inputRef={register({ \r\n              required: true,\r\n              pattern: {\r\n                value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                message: '* Email Adress is not valid'\r\n              },\r\n              validate: {\r\n                value: (value) => checkIfExist(value, setIsEmailExist, 'checkIfEmailExist')\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        {/* PASSWORD */}\r\n        <div css={formInputsContainer}>\r\n          <Fade in={errors.password && errors.password.message ? true : false} timeout={500}>\r\n            <Typography css={errorMessage} variant=\"subtitle2\">{errors.password && errors.password.message}</Typography>\r\n          </Fade>\r\n          <TextField css={formInputs}\r\n            type={showPassword ? 'text' : 'password'}\r\n            variant=\"outlined\"\r\n            label=\"Password *\"\r\n            error={errors.password ? true : false}\r\n            name=\"password\"\r\n            placeholder=\"Monkey1212\"\r\n            inputRef={register({ \r\n              required: true,\r\n              pattern: {\r\n                value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n                message: '* Password is not valid'\r\n              }\r\n            })}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onFocus={onInputFocus('Password must be atleat the length of 8 and contain atleat one of each (Lowercase Uppercase and Number)')}\r\n            onBlur={onInputBlur}\r\n          />\r\n        </div>\r\n        {/* CONFIRM PASSWORD */}\r\n        <div css={formInputsContainer}>\r\n          <TextField css={formInputs} \r\n            type={showConfirmPassword ? 'text' : 'password'}\r\n            variant=\"outlined\"\r\n            label=\"Confirm Password *\"\r\n            error={errors.confirmPassword ? true : false}\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Monkey1212\"\r\n            inputRef={register({ \r\n              required: true,\r\n              validate: (value) => {\r\n                return value === watch('password');\r\n              },\r\n            })}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                  >\r\n                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onFocus={onInputFocus('Passwords must match')}\r\n            onBlur={onInputBlur}\r\n          />\r\n        </div>\r\n        <ReCAPTCHA\r\n          css={formInputs}\r\n          ref={recaptchaRef}\r\n          sitekey=\"6LcPz8EUAAAAAMCOfT7FDeTufYqSALiBtskgWKXi\"\r\n          onChange={recaptchaChanged}\r\n        />\r\n        <Button css={formInputs} type=\"submit\" variant=\"outlined\" color=\"primary\" disabled={isSignupLoading} >{isSignupLoading ? <CircularProgress /> : 'SIGN ME UP PLEASE!'}</Button>\r\n      </form>\r\n    </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport LoginPage from './LoginPage/LoginPage';\r\nimport SignUpPage from './SignUpPage/SignUpPage';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { IDatabaseUser } from '../types/types';\r\n\r\ninterface IProps {\r\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUser: React.Dispatch<React.SetStateAction<IDatabaseUser | null>>;\r\n\r\n}\r\n\r\nenum formPages {\r\n  login,\r\n  signup\r\n}\r\n\r\nconst FormManager: React.FC<IProps> = (props) => {\r\n\r\n  const { setIsLoading, setUser } = props;\r\n  const [selectedFormPage, setSelectedFormPage] = useState<formPages>(formPages.login)\r\n\r\n  const switchForms = useCallback(() => {\r\n    if(selectedFormPage === formPages.login) {\r\n      setSelectedFormPage(formPages.signup)\r\n    } else {\r\n      setSelectedFormPage(formPages.login)\r\n    }\r\n  }, [selectedFormPage])\r\n\r\n  const updatePage = useCallback(() => {\r\n      switch(selectedFormPage) {\r\n        case formPages.login:\r\n          return <LoginPage switchForms={switchForms} setIsLoading={setIsLoading} setUser={setUser}/>\r\n        case formPages.signup:\r\n          return <SignUpPage switchForms={switchForms}/>\r\n      }\r\n  }, [selectedFormPage, setIsLoading, setUser, switchForms])\r\n\r\n  useEffect(() => {\r\n    updatePage();\r\n  }, [selectedFormPage, setSelectedFormPage, updatePage])\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SnackbarProvider\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            autoHideDuration={3000}\r\n        >\r\n          {updatePage()}\r\n        </SnackbarProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FormManager;\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport React from 'react';\r\nimport { AppBar as Bar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport { MenuRounded as MenuIcon } from '@material-ui/icons';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst AppBar: React.FC<IProps> = (props) => {\r\n\r\n  const appBar = css`\r\n    flex-grow: 1;\r\n  `;\r\n\r\n  const iconButton = css`\r\n    color: white;\r\n    margin-right: 0.5em;\r\n  `;\r\n\r\n\r\n  return (\r\n      <Bar position=\"static\" css={appBar}>\r\n        <Toolbar>\r\n          <IconButton css={iconButton}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\">Lorem</Typography>\r\n        </Toolbar>\r\n      </Bar>\r\n  );\r\n}\r\n\r\nexport default AppBar;\r\n","/** @jsx jsx */\r\nimport{ Global, css, jsx } from '@emotion/core';\r\nimport React from 'react';\r\n\r\nexport const GlobalCSS: React.FC = () => {\r\n\r\n    const fontFamily = css`\r\n        * {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n        }\r\n    `;\r\n\r\n    const bodyStyling = css`\r\n        body {\r\n            background-color: #eeeeee;\r\n        }\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    `;\r\n\r\n    const globalStyling = css`\r\n        ${fontFamily}\r\n        ${bodyStyling}\r\n    `;\r\n\r\n    return (\r\n        <Global styles={globalStyling} />\r\n    )\r\n}\r\n\r\nexport default GlobalCSS;\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport React, { useState } from 'react';\r\nimport { Container } from '../shared';\r\nimport { IDatabaseUser } from '../types/types';\r\nimport { Typography, Button, CircularProgress } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\ninterface IProps {\r\n    user: IDatabaseUser;\r\n}\r\n\r\nconst EmailConfirmation: React.FC<IProps> = (props) => {\r\n    const { user } = props;\r\n\r\n    const [isResendEmailLoading, setIsResendEmailLoading] = useState(false);\r\n\r\n    const header = css`\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-bottom: 0.2em;\r\n    `;\r\n\r\n    const didntRecieveContainer = css`\r\n      margin-top: 1em;\r\n    `;\r\n\r\n    const resendButton = css`\r\n      margin-left: 1em;\r\n    `;\r\n\r\n    const resendEmail = () => {\r\n      setIsResendEmailLoading(true);\r\n      axios.post('http://localhost:8080/user/resendEmailConfirmation/', user)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setIsResendEmailLoading(false);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        setIsResendEmailLoading(false)\r\n      })\r\n    }\r\n\r\n  return (\r\n    <Container>\r\n        <Typography variant=\"h4\" css={header}>Verify Email</Typography>\r\n        <div>Hey <b>{user.username}</b>,</div>\r\n        <div>Please verify your email adress: <b>{user.email}</b></div>\r\n        <div css={didntRecieveContainer}>\r\n          <span></span>Didn't recieve the mail?\r\n          <Button variant=\"outlined\" css={resendButton} onClick={resendEmail} disabled={isResendEmailLoading}>{isResendEmailLoading ? <CircularProgress /> : 'resend it now'}</Button>\r\n        </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EmailConfirmation;","/** @jsx jsx */\r\nimport React from 'react';\r\nimport { jsx, css } from '@emotion/core'\r\n\r\ninterface props {\r\n    checkerColor: 'white' | 'black';\r\n    isChecked: boolean;\r\n    isKing: boolean;\r\n}\r\n\r\nconst Checker: React.FC<props> = (props) => {\r\n    const { checkerColor, isChecked, isKing } = props;\r\n    const checker = css`\r\n        border-radius: 50%;\r\n        border: 2px solid #ccc;\r\n        background-color: ${checkerColor};\r\n        box-shadow: 0 0 1px black;\r\n        width: 50%;\r\n        height: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        ${isChecked && `\r\n            box-shadow: 0 0 17px white;\r\n        `}\r\n        user-select: none;\r\n    `;\r\n\r\n    const kingColor = css`\r\n        color: ${checkerColor === 'white' ? 'black' : 'white'};\r\n    `;\r\n    return (\r\n        <div css={checker}>\r\n            {isKing && <div css={kingColor}>♚</div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Checker;","/** @jsx jsx */\r\nimport React from 'react';\r\nimport { jsx, css } from '@emotion/core'\r\nimport Checker from '../Checker/Checker';\r\n\r\ninterface props {\r\n    isChecker: boolean;\r\n    checkerColor: 'white' | 'black' | undefined;\r\n    squareColor: 'white' | 'black';\r\n    onSquareClick: () => void;\r\n    shouldHighlight: boolean;\r\n    isChecked: boolean;\r\n    isDisabled: boolean;\r\n    isKing: boolean;\r\n}\r\n\r\nconst Square: React.FC<props> = (props) => {\r\n\r\n    const { isChecker, checkerColor, onSquareClick, squareColor, shouldHighlight, isChecked, isDisabled, isKing } = props;\r\n\r\n    const squareColorStyle = css`\r\n        background-color:${squareColor};\r\n        ${shouldHighlight && 'background-color: #ff7543; cursor: pointer;'}\r\n        width: 100%;\r\n        height: 100%;\r\n        ${isDisabled && `pointer-events: none; filter: opacity(0.5);`}\r\n    `;\r\n\r\n    const sqaureStyle = css`\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    `;\r\n\r\n    const isChckerStyle = css`\r\n        ${checkerColor === 'black' && `cursor: pointer;`}\r\n    `;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div css={[squareColorStyle, sqaureStyle, isChecker && isChckerStyle]} onClick={onSquareClick}>\r\n                {(isChecker && checkerColor) &&\r\n                    <Checker checkerColor={checkerColor} isChecked={isChecked} isKing={isKing}/>}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Square;","/** @jsx jsx */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { jsx, css } from '@emotion/core'\r\nimport Square from './Square/Square';\r\nimport produce from 'immer';\r\n\r\ninterface props {\r\n    socket: SocketIOClient.Socket | undefined;\r\n}\r\n\r\n\r\ninterface IGame {\r\n    square: {\r\n        column: number;\r\n        row: number;\r\n        isChecker: boolean;\r\n        checkerColor: 'white' | 'black' | undefined;\r\n        squareColor: 'white' | 'black';\r\n        shouldHighlight: boolean;\r\n        isKing: boolean;\r\n    }\r\n}\r\n\r\nconst gameInit: IGame[][] = Array.from({ length: 8 }, (v, rowIndex) => Array.from({ length: 8 }, (v, columnIndex) => {\r\n    console.log('rendered again');\r\n    const checkerColor = rowIndex <= 2 ? 'white' : (rowIndex >= 5 ? 'black' : undefined);\r\n    const evenRow = columnIndex % 2 === 0;\r\n    const rowsAllowed = rowIndex <= 2 && rowIndex >= 5;\r\n    const isChecker = (checkerColor !== undefined) && (rowIndex % 2 === 0 ? evenRow : !evenRow);\r\n    return {\r\n        square: {\r\n            row: rowIndex,\r\n            column: columnIndex,\r\n            isChecker: isChecker,\r\n            checkerColor: isChecker ? checkerColor : undefined,\r\n            squareColor: columnIndex % 2 === 0 ? rowIndex % 2 === 0 ? 'black' : 'white' : rowIndex % 2 === 0 ? 'white' : 'black',\r\n            shouldHighlight: false,\r\n            isKing: false,\r\n        }\r\n    }\r\n}));\r\n\r\nconst MainGame: React.FC<props> = (props) => {\r\n    const getAvailableSteps = () => {\r\n        let coords = [];\r\n        for(let i = 0; i < 8; i++) {\r\n            for(let j = 0; j < 8; j++) {\r\n                if(game[i][j].square.shouldHighlight) {\r\n                    coords.push({\r\n                        row: i,\r\n                        col: j\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return coords;\r\n    }\r\n    const getNumberOfPlayers = (color: 'white' | 'black') => {\r\n        let counter = 0;\r\n        for(let i = 0; i < 8; i++) {\r\n            for(let j = 0; j < 8; j++) {\r\n                if(game[i][j].square.checkerColor === color) {\r\n                    counter++\r\n                }\r\n            }\r\n        }\r\n        return counter;\r\n    }\r\n    const moveChecker = (currentGame: IGame[][], current: {row: number, col: number}, target: {row: number, col: number}) => {\r\n        printBoard(currentGame);\r\n        console.log(`From: ${current.row},${current.col} To: ${target.row},${target.col}`);\r\n        console.log(`------------------------------`);\r\n        const newGame: IGame[][] = produce(currentGame, draft => {\r\n            //if eat\r\n            if(Math.abs(current.row - target.row) === 2) {\r\n                const eatedRow = (current.row+target.row)/2\r\n                const eatedCol = (current.col+target.col)/2\r\n                draft[eatedRow][eatedCol].square.isChecker = false;\r\n                draft[eatedRow][eatedCol].square.checkerColor = undefined;\r\n                draft[eatedRow][eatedCol].square.isKing = false;\r\n            }\r\n            draft.forEach((row, rowIndex) => \r\n                row.forEach((column, columnIndex) => \r\n                    draft[rowIndex][columnIndex].square.shouldHighlight = false\r\n                )\r\n            );\r\n            const currentChecker = draft[current.row][current.col].square;\r\n            draft[current.row][current.col].square.isChecker = false;\r\n            draft[target.row][target.col].square.isChecker = true;\r\n            draft[target.row][target.col].square.checkerColor = currentChecker.checkerColor;\r\n            if(target.row === 7 && currentChecker.checkerColor === 'white' || currentChecker.isKing) {\r\n                draft[target.row][target.col].square.isKing = true;\r\n            }\r\n            else if(target.row === 0 && currentChecker.checkerColor === 'black' || currentChecker.isKing) {\r\n            draft[target.row][target.col].square.isKing = true;\r\n            }\r\n            draft[current.row][current.col].square.checkerColor = undefined;\r\n            draft[current.row][current.col].square.isKing = false;\r\n            return draft;\r\n        });\r\n        return newGame;\r\n    }\r\n \r\n    const { socket } = props;\r\n    const [isGameStarted, setIsGameStarted] = useState(false);\r\n    const [isGameFinished, setIsGameFinished] = useState(false);\r\n    const [isWon, setIsWon] = useState(false);\r\n    const [turn, setTurn] = useState(false);;\r\n    const [game, setGame] = useState<IGame[][]>(gameInit);\r\n    const [isAlreadyClicked, setIsAlreadyClicked] = useState(false);\r\n    const [currentClicked, setCurrentClicked] = useState<ICoords | undefined>(undefined);\r\n    const [availableSteps, setAvailableSteps] = useState<ICoords[]>([]);\r\n    useEffect(() => {\r\n        setAvailableSteps(getAvailableSteps())\r\n    }, [game])\r\n\r\n    const checkIfClicked = (row: number, col: number) => {\r\n        return currentClicked ? currentClicked.row === row && currentClicked.col === col : false\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            socket.off('moveEnd');\r\n            socket.on('moveEnd', ({ current, target }: { current: ICoords, target: ICoords}) => {\r\n                setGame(moveChecker(game, current, target));\r\n                setTurn(true);\r\n            });\r\n\r\n            socket.off('gameStart');\r\n            socket.on('gameStart', (turn: string) => {\r\n                setIsGameStarted(true);\r\n                setTurn(turn === socket.id);\r\n            });\r\n        }\r\n    }, [socket, game]);\r\n\r\n    useEffect(() => {\r\n        if(getNumberOfPlayers('white') === 0) {\r\n            setIsGameFinished(true);\r\n            setIsWon(true);\r\n        }\r\n        else if(getNumberOfPlayers('black') === 0) {\r\n            setIsGameFinished(true);\r\n            setIsWon(false);\r\n        }\r\n    }, [game, isGameFinished, isWon, getNumberOfPlayers])\r\n\r\n    const rowStyle = css`\r\n        display: flex;\r\n        width: fit-content;\r\n        margin: auto;\r\n        width: 52vw;\r\n        height: 6.5vw;\r\n    `;\r\n\r\n    const removeHighlight = () => {\r\n        const newGame: IGame[][] = produce(game, draft => {\r\n            draft.map((row, rowIndex) => row.map((column, columnIndex) => draft[rowIndex][columnIndex].square.shouldHighlight = false))\r\n        });\r\n        setGame(newGame);\r\n        setIsAlreadyClicked(false);\r\n        setCurrentClicked(undefined);\r\n    }\r\n\r\n    interface ICoords {\r\n        row: number;\r\n        col: number;\r\n    }\r\n\r\n    const isStepTaken = (coords: ICoords | null) => {\r\n        if(coords) {\r\n            return game[coords.row][coords.col].square.isChecker;\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const playerColor = (coords: ICoords) => {\r\n        if(game[coords.row][coords.col].square.checkerColor) {\r\n            return game[coords.row][coords.col].square.checkerColor;\r\n        };\r\n    }\r\n\r\n\r\n    const onSquareClick = (col: number, row: number) => {\r\n        if(isAlreadyClicked) {\r\n            //if clicked himslef\r\n            if(currentClicked && currentClicked.row === row && currentClicked.col === col) {\r\n                removeHighlight();\r\n                return;\r\n            }\r\n            else if (availableSteps.filter(x => x.row === row && x.col === col).length > 0) {\r\n                if(socket && currentClicked) {\r\n                    const current = {\r\n                        row: currentClicked.row,\r\n                        col: currentClicked.col,\r\n                    }\r\n                    const target = {\r\n                        row: row, \r\n                        col: col,\r\n                    }\r\n                    // turn: turn === 'black' ? 'white' : 'black'\r\n                    setIsAlreadyClicked(false);\r\n                    setCurrentClicked(undefined);\r\n                    setGame(moveChecker(game, current, target));\r\n                    setTurn(false);\r\n                    socket.emit('move', { current ,target });\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        else if (!game[row][col].square.isChecker || game[row][col].square.checkerColor === 'white') return;\r\n        console.log(`you clicked [col - ${col}, row - ${row}]`);\r\n\r\n        const checkStepsAvailable = (next: ICoords, nextNext: ICoords | null, game: IGame[][]): IGame[][] => {\r\n            const isNextStepTaken = isStepTaken(next);\r\n            const isNextNextStepTaken = isStepTaken(nextNext);\r\n            const nextPlayerColor = playerColor(next);\r\n            let isSucceed = false;\r\n            const newGame: IGame[][] = produce(game, draft => {\r\n                if(isNextStepTaken) {\r\n                    if(nextPlayerColor === 'black') {\r\n                        return;\r\n                    }\r\n                    else if(nextPlayerColor === 'white') {\r\n                        if(isNextNextStepTaken) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            if(nextNext) {\r\n                                draft[nextNext.row][nextNext.col].square.shouldHighlight = true;\r\n                                isSucceed = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    draft[next.row][next.col].square.shouldHighlight = true;\r\n                    isSucceed = true;\r\n                }\r\n            })\r\n            if(isSucceed) {\r\n                setIsAlreadyClicked(true);\r\n                setCurrentClicked({row: row, col: col});\r\n            }\r\n            return newGame\r\n        }\r\n\r\n        // if king...\r\n        if(game[row][col].square.isKing) {\r\n            if(row === 0 && col === 0) {\r\n                const stepsAvailable = {\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousPreviousRight: {\r\n                        row: row + 2,\r\n                        col: col + 2\r\n                    }\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.previousRight, stepsAvailable.previousPreviousRight, game);\r\n                setGame(updatedBoard)\r\n            }\r\n            else if(row === 0 && col === 6) {\r\n                const stepsAvailable = {\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.previousRight, null, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, updatedBoard);\r\n                setGame(updatedBoardLatest); \r\n            }\r\n            else if(row === 0) {\r\n                const stepsAvailable = {\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousPreviousRight: {\r\n                        row: row + 2,\r\n                        col: col + 2\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.previousRight, stepsAvailable.previousPreviousRight, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, updatedBoard);\r\n                setGame(updatedBoardLatest); \r\n            }\r\n            else if(row === 7 && col === 7) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game);\r\n                setGame(updatedBoard)\r\n            }\r\n            else if(row === 7 && col === 1) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, null, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, updatedBoard);\r\n                setGame(updatedBoardLatest); \r\n            }\r\n            else if(row === 1 && col === 1) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousPreviousRight: {\r\n                        row: row + 2,\r\n                        col: col + 2\r\n                    },\r\n                }\r\n                const nextLeft = checkStepsAvailable(stepsAvailable.nextLeft, null, game)\r\n                const nextRight = checkStepsAvailable(stepsAvailable.nextRight, null, nextLeft)\r\n                const previousLeft = checkStepsAvailable(stepsAvailable.previousLeft, null, nextRight)\r\n                const previousRight = checkStepsAvailable(stepsAvailable.previousRight, stepsAvailable.previousPreviousRight, previousLeft)\r\n                setGame(previousRight);\r\n            }\r\n            else if(row === 1) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousPreviousRight: {\r\n                        row: row + 2,\r\n                        col: col + 2\r\n                    },\r\n                }\r\n                const nextLeft = checkStepsAvailable(stepsAvailable.nextLeft, null, game)\r\n                const nextRight = checkStepsAvailable(stepsAvailable.nextRight, null, nextLeft)\r\n                const previousLeft = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, nextRight)\r\n                const previousRight = checkStepsAvailable(stepsAvailable.previousRight, stepsAvailable.previousPreviousRight, previousLeft)\r\n                setGame(previousRight);\r\n            }\r\n            else if(row === 7) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else if(col === 0 && row === 6) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, game)\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.previousRight, null, updatedBoard)\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else if(col === 6 && row === 6) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                }\r\n                const nextLeft = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game)\r\n                const nextRight = checkStepsAvailable(stepsAvailable.nextRight, null, nextLeft)\r\n                const previousLeft = checkStepsAvailable(stepsAvailable.previousLeft, null, nextRight)\r\n                const previousRight = checkStepsAvailable(stepsAvailable.previousRight, null, previousLeft)\r\n                setGame(previousRight);\r\n            }\r\n            else if(row === 6) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                }\r\n                const nextLeft = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game)\r\n                const nextRight = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, nextLeft)\r\n                const previousLeft = checkStepsAvailable(stepsAvailable.previousLeft, null, nextRight)\r\n                const previousRight = checkStepsAvailable(stepsAvailable.previousRight, null, previousLeft)\r\n                setGame(previousRight);\r\n            }\r\n            else if (col === 6) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                }\r\n                const nextLeft = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game)\r\n                const nextRight = checkStepsAvailable(stepsAvailable.nextRight, null, nextLeft)\r\n                const previousLeft = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, nextRight)\r\n                const previousRight = checkStepsAvailable(stepsAvailable.previousRight, null, previousLeft)\r\n                setGame(previousRight);\r\n            }\r\n            else if(col === 1) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.previousRight, null, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, updatedBoard);\r\n                setGame(updatedBoardLatest); \r\n            }\r\n            else if(col === 0) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousPreviousRight: {\r\n                        row: row + 2,\r\n                        col: col + 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.previousRight, stepsAvailable.previousPreviousRight, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else if(col === 7 && row === 1) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, null, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else if(col === 7) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    previousLeft: {\r\n                        row: row + 1,\r\n                        col: col - 1\r\n                    },\r\n                    previousPreviousLeft: {\r\n                        row: row + 2,\r\n                        col: col - 2\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    previousRight: {\r\n                        row: row + 1,\r\n                        col: col + 1\r\n                    },\r\n                    previousPreviousRight: {\r\n                        row: row + 2,\r\n                        col: col + 2\r\n                    },\r\n                }\r\n                const nextLeft = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game)\r\n                const nextRight = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, nextLeft)\r\n                const previousLeft = checkStepsAvailable(stepsAvailable.previousLeft, stepsAvailable.previousPreviousLeft, nextRight)\r\n                const previousRight = checkStepsAvailable(stepsAvailable.previousRight, stepsAvailable.previousPreviousRight, previousLeft)\r\n                setGame(previousRight);\r\n            }\r\n        }\r\n        else {\r\n            if(col === 0) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    }\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, game);\r\n                setGame(updatedBoard)\r\n            }\r\n            else if(col === 7 && row === 1) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, null, game);\r\n                setGame(updatedBoard);\r\n            }\r\n            else if (col === 7) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    }\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game);\r\n                setGame(updatedBoard);\r\n            }\r\n            else if (col === 1 && row !== 1) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    },\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    }\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextLeft, null, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else if (col === 6) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    }\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextRight, null, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else if (row === 1 && col === 0) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextRight, null, game);\r\n                setGame(updatedBoard);\r\n    \r\n            }\r\n            else if (row === 1 && col === 7) {\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, null, game);\r\n                setGame(updatedBoard);\r\n    \r\n            }\r\n            else if(row === 1) {\r\n                const stepsAvailable = {\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextLeft, null, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextRight, null, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n            else {\r\n                if(row === 0) return;\r\n                const stepsAvailable = {\r\n                    nextLeft: {\r\n                        row: row - 1,\r\n                        col: col - 1\r\n                    },\r\n                    nextRight: {\r\n                        row: row - 1,\r\n                        col: col + 1\r\n                    },\r\n                    nextNextLeft: {\r\n                        row: row - 2,\r\n                        col: col - 2\r\n                    },\r\n                    nextNextRight: {\r\n                        row: row - 2,\r\n                        col: col + 2\r\n                    }\r\n                }\r\n                const updatedBoard = checkStepsAvailable(stepsAvailable.nextRight, stepsAvailable.nextNextRight, game);\r\n                const updatedBoardLatest = checkStepsAvailable(stepsAvailable.nextLeft, stepsAvailable.nextNextLeft, updatedBoard);\r\n                setGame(updatedBoardLatest);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div css={css`width: fit-content;\r\n        height: fit-content;\r\n        margin: auto;`}>\r\n            {socket && isGameStarted ? \r\n                isGameFinished ? \r\n                    isWon ?\r\n                        <React.Fragment>\r\n                            {game.map((row, rowIndex) => (\r\n                                <div css={rowStyle} key={rowIndex}>\r\n                                    {row.map((column, columnIndex) => <Square key={columnIndex} isDisabled={true} isKing={column.square.isKing} isChecked={checkIfClicked(rowIndex, columnIndex)} shouldHighlight={column.square.shouldHighlight} squareColor={column.square.squareColor} onSquareClick={() => onSquareClick(column.square.column, column.square.row)} isChecker={column.square.isChecker} checkerColor={column.square.checkerColor} />)}\r\n                                </div>\r\n                            ))}\r\n                            <div>Game End! YOU WON! 🏆</div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            {game.map((row, rowIndex) => (\r\n                                <div css={rowStyle} key={rowIndex}>\r\n                                    {row.map((column, columnIndex) => <Square key={columnIndex} isDisabled={true} isKing={column.square.isKing} isChecked={checkIfClicked(rowIndex, columnIndex)} shouldHighlight={column.square.shouldHighlight} squareColor={column.square.squareColor} onSquareClick={() => onSquareClick(column.square.column, column.square.row)} isChecker={column.square.isChecker} checkerColor={column.square.checkerColor} />)}\r\n                                </div>\r\n                            ))}\r\n                            <div>Game End! YOU LOST! 😢</div>\r\n                        </React.Fragment>\r\n                :\r\n                    turn ?\r\n                        <React.Fragment>\r\n                            {game.map((row, rowIndex) => (\r\n                                <div css={rowStyle} key={rowIndex}>\r\n                                    {row.map((column, columnIndex) => <Square key={columnIndex} isKing={column.square.isKing} isDisabled={false} isChecked={checkIfClicked(rowIndex, columnIndex)} shouldHighlight={column.square.shouldHighlight} squareColor={column.square.squareColor} onSquareClick={() => onSquareClick(column.square.column, column.square.row)} isChecker={column.square.isChecker} checkerColor={column.square.checkerColor} />)}\r\n                                </div>\r\n                            ))}\r\n                            <div>Your turn.</div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            {game.map((row, rowIndex) => (\r\n                                <div css={rowStyle} key={rowIndex}>\r\n                                    {row.map((column, columnIndex) => <Square key={columnIndex} isDisabled={true} isKing={column.square.isKing} isChecked={checkIfClicked(rowIndex, columnIndex)} shouldHighlight={column.square.shouldHighlight} squareColor={column.square.squareColor} onSquareClick={() => onSquareClick(column.square.column, column.square.row)} isChecker={column.square.isChecker} checkerColor={column.square.checkerColor} />)}\r\n                                </div>\r\n                            ))}\r\n                            <div>Waiting for opponent to play.</div>\r\n                        </React.Fragment>\r\n                    :\r\n            <div>Waiting for opponent to join...</div>}\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst printSymbol = {\r\n    white: '🍪',\r\n    black: '🍦',\r\n    default: '🍫',\r\n}\r\nconst printBoard = (board: IGame[][]) => {\r\n    board.map(row => {\r\n        const printRow = row.map(({ square: { checkerColor } }) => {\r\n            const symbol = printSymbol[checkerColor!] || printSymbol.default;\r\n            return ` ${symbol} `\r\n        });\r\n        console.log(...printRow);\r\n    });\r\n}\r\n\r\n//@ts-ignore;\r\nMainGame.whyDidYouRender = true\r\nexport default MainGame;","import React, { useEffect, useState } from 'react';\r\nimport { FormManager } from './FormManager';\r\nimport AppBar from './AppBar';\r\nimport GlobalCSS from './GlobalCSS';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { CookiesProvider, useCookies } from 'react-cookie';\r\nimport axios from 'axios';\r\nimport { Button } from '@material-ui/core';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport EmailConfirmation from './EmailConfirmation/EmailConfirmation';\r\nimport { IDatabaseUser } from './types/types';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport MainGame from './MainGame/MainGame';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1e88e5',\r\n    },\r\n    secondary: {\r\n      main: '#00c853',\r\n    },\r\n  },\r\n});\r\n\r\nexport const verifyUser = (setUser: React.Dispatch<React.SetStateAction<IDatabaseUser | null>>, setIsLoading: React.Dispatch<React.SetStateAction<boolean>>, setSocket?: React.Dispatch<React.SetStateAction<SocketIOClient.Socket | undefined>>) => {\r\n  setIsLoading(true);\r\n  axios.get('http://localhost:8080/user/', { withCredentials: true })\r\n  .then((res) => {\r\n    setIsLoading(false);\r\n    setUser(res.data as IDatabaseUser);\r\n    if(setSocket) {\r\n      const socket = socketIOClient('localhost:8080', {query: `user=${JSON.stringify(res.data)}`});\r\n      setSocket(socket);\r\n    }\r\n  })\r\n  .catch((error) => {\r\n      setIsLoading(false);\r\n      setUser(null)\r\n  })\r\n}\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const [ isLoading, setIsLoading ] = useState(true);\r\n  const [ user, setUser ] = useState<null | IDatabaseUser>(null);\r\n  const [ cookies, setCookie, removeCookie ] = useCookies(['userToken']);\r\n  const [ socket, setSocket ] = useState<SocketIOClient.Socket | undefined>(undefined)\r\n\r\n  useEffect(() => {\r\n    verifyUser(setUser, setIsLoading, setSocket);\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CookiesProvider>\r\n      <GlobalCSS />\r\n        <ThemeProvider theme={theme}>\r\n          <SnackbarProvider\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              autoHideDuration={3000}\r\n          >\r\n            <AppBar />\r\n            {isLoading ?\r\n              <div>Loading...</div>\r\n              : user ?\r\n                user.isEmailConfirmed ? \r\n                  <div>\r\n                    {Object.entries(user).map((detail, index: number) => {\r\n                      return detail[0] === 'dateOfBirth' ?\r\n                        <div key={index}>{detail[0]}: {new Date(detail[1]).toLocaleDateString()}</div>\r\n                        : <div key={index}>{detail[0]}: {detail[1].toString()}</div>\r\n                    })}\r\n                    <Button onClick={() => { removeCookie('userToken'); verifyUser(setUser, setIsLoading) }}>logout</Button>\r\n                    <MainGame socket={socket}/>\r\n                  </div>\r\n                : <EmailConfirmation user={user} />\r\n                : <FormManager setIsLoading={setIsLoading} setUser={setUser} />\r\n            }\r\n            </SnackbarProvider>\r\n        </ThemeProvider>\r\n      </CookiesProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n//@ts-ignore\r\nApp.whyDidYouRender = true\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { StylesProvider } from '@material-ui/core/styles';\r\n\r\nReactDOM.render(<StylesProvider injectFirst><App /></StylesProvider>, document.getElementById('root'));"],"sourceRoot":""}